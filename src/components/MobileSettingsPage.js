import React, { useState } from 'react';
import { FiArrowLeft, FiVolume2, FiVolumeX, FiBell, FiBellOff, FiEye, FiEyeOff, FiSave } from 'react-icons/fi';
import ThemeToggle from './ThemeToggle/ThemeToggle';
import styles from './MobileSettingsPage.module.css';

const MobileSettingsPage = ({ isOpen, onClose }) => {
  const [settings, setSettings] = useState({
    theme: 'dark',
    soundEnabled: true,
    notificationsEnabled: true,
    fontSize: 'medium',
    language: 'ru',
    autoSave: true,
    showOnlineStatus: true,
    messagePreview: true,
    darkMode: true,
    vibrationEnabled: true,
    autoDownload: false,
    animationType: 'slideFromRight'
  });

  const handleSettingChange = (key, value) => {
    setSettings(prev => ({
      ...prev,
      [key]: value
    }));
  };

  const handleSave = () => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    console.log('Settings saved:', settings);
    onClose();
  };

  if (!isOpen) return null;

  return (
    <div className={styles.settingsPage}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className={styles.pageHeader}>
        <button className={styles.backButton} onClick={onClose}>
          <FiArrowLeft size={24} />
        </button>
        <h1 className={styles.pageTitle}>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h1>
        <button className={styles.saveButton} onClick={handleSave}>
          <FiSave size={20} />
        </button>
      </div>

      {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
      <div className={styles.pageContent}>
        {/* –í–Ω–µ—à–Ω–∏–π –≤–∏–¥ */}
        <div className={styles.settingsSection}>
          <h2 className={styles.sectionTitle}>–í–Ω–µ—à–Ω–∏–π –≤–∏–¥</h2>
          
          <div className={styles.settingCard}>
            <div className={styles.settingInfo}>
              <h3 className={styles.settingLabel}>–¢–µ–º–∞</h3>
              <p className={styles.settingDescription}>–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç–æ–≤—É—é —Å—Ö–µ–º—É</p>
            </div>
            <div className={styles.settingControl}>
              <ThemeToggle variant="buttons" />
            </div>
          </div>

          <div className={styles.settingCard}>
            <div className={styles.settingInfo}>
              <h3 className={styles.settingLabel}>–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞</h3>
              <p className={styles.settingDescription}>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —á—Ç–µ–Ω–∏—è</p>
            </div>
            <div className={styles.settingControl}>
              <select
                className={styles.select}
                value={settings.fontSize}
                onChange={(e) => handleSettingChange('fontSize', e.target.value)}
              >
                <option value="small">–ú–∞–ª–µ–Ω—å–∫–∏–π</option>
                <option value="medium">–°—Ä–µ–¥–Ω–∏–π</option>
                <option value="large">–ë–æ–ª—å—à–æ–π</option>
                <option value="extra-large">–û—á–µ–Ω—å –±–æ–ª—å—à–æ–π</option>
              </select>
            </div>
          </div>

          <div className={styles.settingCard}>
            <div className={styles.settingInfo}>
              <h3 className={styles.settingLabel}>–ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤</h3>
              <p className={styles.settingDescription}>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö –º–µ–∂–¥—É —á–∞—Ç–∞–º–∏</p>
            </div>
            <div className={styles.settingControl}>
              <div className={styles.animationButtons}>
                <button
                  className={`${styles.animationButton} ${settings.animationType === 'slideFromRight' ? styles.active : ''}`}
                  onClick={() => handleSettingChange('animationType', 'slideFromRight')}
                  title="–°–¥–≤–∏–≥ —Å–ø—Ä–∞–≤–∞"
                >
                  ‚Üí
                </button>
                <button
                  className={`${styles.animationButton} ${settings.animationType === 'scaleIn' ? styles.active : ''}`}
                  onClick={() => handleSettingChange('animationType', 'scaleIn')}
                  title="–ú—è–≥–∫–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ"
                >
                  ‚ö°
                </button>
                <button
                  className={`${styles.animationButton} ${settings.animationType === 'fadeIn' ? styles.active : ''}`}
                  onClick={() => handleSettingChange('animationType', 'fadeIn')}
                  title="Fade-—ç—Ñ—Ñ–µ–∫—Ç"
                >
                  ‚ú®
                </button>
              </div>
            </div>
          </div>
        </div>

        {/* –ó–≤—É–∫ –∏ –≤–∏–±—Ä–∞—Ü–∏—è */}
        <div className={styles.settingsSection}>
          <h2 className={styles.sectionTitle}>–ó–≤—É–∫ –∏ –≤–∏–±—Ä–∞—Ü–∏—è</h2>
          
          <div className={styles.settingCard}>
            <div className={styles.settingInfo}>
              <h3 className={styles.settingLabel}>–ó–≤—É–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h3>
              <p className={styles.settingDescription}>–í–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫–∏ –¥–ª—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π</p>
            </div>
            <div className={styles.settingControl}>
              <button
                className={`${styles.toggleSwitch} ${settings.soundEnabled ? styles.active : ''}`}
                onClick={() => handleSettingChange('soundEnabled', !settings.soundEnabled)}
              >
                <div className={styles.toggleThumb}>
                  {settings.soundEnabled ? <FiVolume2 size={16} /> : <FiVolumeX size={16} />}
                </div>
              </button>
            </div>
          </div>

          <div className={styles.settingCard}>
            <div className={styles.settingInfo}>
              <h3 className={styles.settingLabel}>–í–∏–±—Ä–∞—Ü–∏—è</h3>
              <p className={styles.settingDescription}>–í–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π</p>
            </div>
            <div className={styles.settingControl}>
              <button
                className={`${styles.toggleSwitch} ${settings.vibrationEnabled ? styles.active : ''}`}
                onClick={() => handleSettingChange('vibrationEnabled', !settings.vibrationEnabled)}
              >
                <div className={styles.toggleThumb}>
                  üì≥
                </div>
              </button>
            </div>
          </div>
        </div>

        {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
        <div className={styles.settingsSection}>
          <h2 className={styles.sectionTitle}>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h2>
          
          <div className={styles.settingCard}>
            <div className={styles.settingInfo}>
              <h3 className={styles.settingLabel}>Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
              <p className={styles.settingDescription}>–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö</p>
            </div>
            <div className={styles.settingControl}>
              <button
                className={`${styles.toggleSwitch} ${settings.notificationsEnabled ? styles.active : ''}`}
                onClick={() => handleSettingChange('notificationsEnabled', !settings.notificationsEnabled)}
              >
                <div className={styles.toggleThumb}>
                  {settings.notificationsEnabled ? <FiBell size={16} /> : <FiBellOff size={16} />}
                </div>
              </button>
            </div>
          </div>

          <div className={styles.settingCard}>
            <div className={styles.settingInfo}>
              <h3 className={styles.settingLabel}>–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å –æ–Ω–ª–∞–π–Ω</h3>
              <p className={styles.settingDescription}>–î—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–∏–¥—è—Ç –≤–∞—à —Å—Ç–∞—Ç—É—Å</p>
            </div>
            <div className={styles.settingControl}>
              <button
                className={`${styles.toggleSwitch} ${settings.showOnlineStatus ? styles.active : ''}`}
                onClick={() => handleSettingChange('showOnlineStatus', !settings.showOnlineStatus)}
              >
                <div className={styles.toggleThumb}>
                  {settings.showOnlineStatus ? <FiEye size={16} /> : <FiEyeOff size={16} />}
                </div>
              </button>
            </div>
          </div>

          <div className={styles.settingCard}>
            <div className={styles.settingInfo}>
              <h3 className={styles.settingLabel}>–ü—Ä–µ–≤—å—é —Å–æ–æ–±—â–µ–Ω–∏–π</h3>
              <p className={styles.settingDescription}>–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö</p>
            </div>
            <div className={styles.settingControl}>
              <button
                className={`${styles.toggleSwitch} ${settings.messagePreview ? styles.active : ''}`}
                onClick={() => handleSettingChange('messagePreview', !settings.messagePreview)}
              >
                <div className={styles.toggleThumb}>
                  {settings.messagePreview ? 'üëÅÔ∏è' : 'üö´'}
                </div>
              </button>
            </div>
          </div>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ */}
        <div className={styles.settingsSection}>
          <h2 className={styles.sectionTitle}>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ</h2>
          
          <div className={styles.settingCard}>
            <div className={styles.settingInfo}>
              <h3 className={styles.settingLabel}>–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</h3>
              <p className={styles.settingDescription}>–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</p>
            </div>
            <div className={styles.settingControl}>
              <select
                className={styles.select}
                value={settings.language}
                onChange={(e) => handleSettingChange('language', e.target.value)}
              >
                <option value="ru">–†—É—Å—Å–∫–∏–π</option>
                <option value="en">English</option>
                <option value="es">Espa√±ol</option>
                <option value="fr">Fran√ßais</option>
                <option value="de">Deutsch</option>
              </select>
            </div>
          </div>

          <div className={styles.settingCard}>
            <div className={styles.settingInfo}>
              <h3 className={styles.settingLabel}>–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ</h3>
              <p className={styles.settingDescription}>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π</p>
            </div>
            <div className={styles.settingControl}>
              <button
                className={`${styles.toggleSwitch} ${settings.autoSave ? styles.active : ''}`}
                onClick={() => handleSettingChange('autoSave', !settings.autoSave)}
              >
                <div className={styles.toggleThumb}>
                  {settings.autoSave ? 'üíæ' : '‚ùå'}
                </div>
              </button>
            </div>
          </div>

          <div className={styles.settingCard}>
            <div className={styles.settingInfo}>
              <h3 className={styles.settingLabel}>–ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –º–µ–¥–∏–∞</h3>
              <p className={styles.settingDescription}>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –≤–∏–¥–µ–æ</p>
            </div>
            <div className={styles.settingControl}>
              <button
                className={`${styles.toggleSwitch} ${settings.autoDownload ? styles.active : ''}`}
                onClick={() => handleSettingChange('autoDownload', !settings.autoDownload)}
              >
                <div className={styles.toggleThumb}>
                  {settings.autoDownload ? 'üì•' : 'üì§'}
                </div>
              </button>
            </div>
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className={styles.settingsSection}>
          <h2 className={styles.sectionTitle}>–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</h2>
          
          <div className={styles.infoCard}>
            <div className={styles.appInfo}>
              <h3 className={styles.appName}>Tuktuk Messenger</h3>
              <p className={styles.appVersion}>–í–µ—Ä—Å–∏—è 1.0.0</p>
              <p className={styles.appDescription}>
                –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã, 
                —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default MobileSettingsPage;
